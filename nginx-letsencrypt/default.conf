upstream client {
  server client:3000;
}

upstream api {
  server api:5000;
}

server {
  listen 80;
  server_name techrecruiterapp.com www.techrecruiterapp.com;

  # define where Nginx should write its logs
  # access_log /var/www/app/log/nginx.access.log;
  # error_log /var/www/app/log/nginx.error.log;

  rewrite ^(.*) https://techrecruiterapp.com$1 permanent;

  # certificate for SSL connection
  location /.well-known/acme-challenge/ {
    root /var/www/certbot/;
  }

  location / {
    ###################
    # proxy_pass http://client;
    ###################
    return 301 https://$host$request_uri;
  }

  location /sockjs-node {
    proxy_pass http://client;
    # proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }

  location /api {
    proxy_pass http://api;
  }

}

server {
    listen 443 ssl;
    server_name techrecruiterapp.com www.techrecruiterapp.com;

    ssl_certificate /usr/share/nginx/certificates/fullchain.pem;
    ssl_certificate_key /usr/share/nginx/certificates/privkey.pem;
    include /etc/ssl-options/options-nginx-ssl.conf;
    ssl_dhparam /etc/ssl-options/ssl-dhparams.pem;

    # define where Nginxshould write its logs
    # access_log /var/www/app/log/nginx.access.ssl.log;
    # error_log /var/www/app/log/nginx.error.ssl.log;

    location / {
    ###################
    proxy_pass http://techrecruiterapp.com;
    ###################

    location /sockjs-node {
    proxy_pass http://client;
    # proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    }

    location /api {
    proxy_pass http://api;
    }

  }

    # if ($host = 'www.techrecruiterapp.com' ) {
		# rewrite ^(.*)$ https://techrecruiterapp.com$1 permanent;
	}